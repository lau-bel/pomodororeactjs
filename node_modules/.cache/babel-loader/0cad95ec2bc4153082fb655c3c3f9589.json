{"ast":null,"code":"import _classCallCheck from \"/Users/Elisa/Becode/pomodororeactjs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Elisa/Becode/pomodororeactjs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Elisa/Becode/pomodororeactjs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Elisa/Becode/pomodororeactjs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Elisa/Becode/pomodororeactjs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Elisa/Becode/pomodororeactjs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Elisa/Becode/pomodororeactjs/src/timer.js\";\nimport React, { Component } from 'react';\nimport ButtonPlus from './buttonPlus.js';\nimport ButtonMinus from './ButtonMinus.js';\nimport StartButton from './startbutton.js';\nimport Sound from './react-sound.js';\nimport './App.css';\n\nvar Timer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer(props) {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Timer).call(this, props));\n    _this.AddMinutes = _this.AddMinutes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.DeleteMinutes = _this.DeleteMinutes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.DecreasedOn = _this.DecreasedOn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.tick = _this.tick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.mySound = React.createRef();\n    _this.state = {\n      minutes: 20,\n      seconds: 0 + \"0\",\n      running: false,\n      currentTime: \"\",\n      text: \"Start\"\n    };\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"AddMinutes\",\n    value: function AddMinutes() {\n      var min = this.state.minutes;\n\n      if (min <= 59) {\n        this.setState({\n          minutes: this.state.minutes + 1\n        });\n      }\n    }\n  }, {\n    key: \"DeleteMinutes\",\n    value: function DeleteMinutes() {\n      var min = this.state.minutes;\n\n      if (min > 0) {\n        this.setState({\n          minutes: this.state.minutes - 1\n        });\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      var min = Math.floor(this.secondsRemaining / 60);\n      var sec = this.secondsRemaining - min * 60;\n      this.setState({\n        minutes: min,\n        seconds: sec\n      });\n\n      if (sec < 10) {\n        this.setState({\n          seconds: \"0\" + this.state.seconds\n        });\n      }\n\n      if (min < 10) {\n        this.setState({\n          minutes: \"0\" + this.state.minutes\n        });\n      }\n\n      if (min === 0 & sec === 0) {\n        clearInterval(this.intervalHandle);\n      }\n\n      this.secondsRemaining--;\n    }\n  }, {\n    key: \"DecreasedOn\",\n    value: function DecreasedOn() {\n      if (!this.state.running) {\n        this.setState({\n          running: true,\n          currentTime: this.state.minutes,\n          text: \"Reset\"\n        });\n        this.intervalHandle = setInterval(this.tick, 1000);\n        var time = this.state.minutes;\n        this.secondsRemaining = time * 60;\n\n        if (this.state.minutes < 10) {\n          this.setState({\n            minutes: \"0\" + this.state.minutes\n          });\n        }\n      } else {\n        clearInterval(this.intervalHandle);\n        this.setState({\n          running: false,\n          minutes: this.state.currentTime,\n          seconds: 0 + \"0\",\n          text: \"Restart\"\n        });\n      }\n\n      var min = this.state.minutes;\n      var sec = this.secondsRemaining;\n\n      if (min == 0 & sec == 0) {\n        return React.createElement(Sound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Timer\",\n        class: \"timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \" \", this.state.minutes, \" : \", this.state.seconds), React.createElement(\"div\", {\n        class: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(ButtonPlus, {\n        onClick: function onClick() {\n          return _this2.AddMinutes();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(StartButton, {\n        onClick: function onClick() {\n          return _this2.DecreasedOn();\n        },\n        content: this.state.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(ButtonMinus, {\n        onClick: function onClick() {\n          return _this2.DeleteMinutes();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Timer;\n}(Component);\n\nexport default Timer;","map":{"version":3,"sources":["/Users/Elisa/Becode/pomodororeactjs/src/timer.js"],"names":["React","Component","ButtonPlus","ButtonMinus","StartButton","Sound","Timer","props","AddMinutes","bind","DeleteMinutes","DecreasedOn","tick","mySound","createRef","state","minutes","seconds","running","currentTime","text","min","setState","Math","floor","secondsRemaining","sec","clearInterval","intervalHandle","setInterval","time"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ButtonPlus from './buttonPlus.js';\nimport ButtonMinus from './ButtonMinus.js';\nimport StartButton from './startbutton.js';\nimport Sound from './react-sound.js';\n\n\n\nimport './App.css';\n\nclass Timer extends Component {\n\n  constructor(props){\n    super(props);\n      this.AddMinutes = this.AddMinutes.bind(this);\n      this.DeleteMinutes = this.DeleteMinutes.bind(this);\n      this.DecreasedOn = this.DecreasedOn.bind(this);\n      this.tick = this.tick.bind(this);\n      this.mySound = React.createRef();\n      this.state = {\n        minutes : 20,\n        seconds : 0 + \"0\",\n        running : false,\n        currentTime: \"\",\n        text : \"Start\"\n      }\n\n  }\n\n\n  AddMinutes(){\n\n      var min = this.state.minutes\n\n      if (min <= 59){\n          this.setState({\n          minutes: (this.state.minutes +1),\n\n    })\n  }\n}\n\n  DeleteMinutes(){\n    var min = this.state.minutes\n    if (min > 0){\n    this.setState({\n\n      minutes: (this.state.minutes -1),\n\n    })\n  }\n\n  }\n\n  tick() {\n\n    var min = Math.floor(this.secondsRemaining / 60);\n    var sec = this.secondsRemaining - (min * 60);\n\n  this.setState({\n    minutes: min,\n    seconds: sec\n  })\n\n  if (sec < 10) {\n    this.setState({\n      seconds: \"0\" + this.state.seconds,\n    })\n  }\n\n  if (min < 10) {\n\n    this.setState({\n      minutes: \"0\" + this.state.minutes,\n    })\n\n  }\n\n\n  if (min === 0 & sec === 0) {\n      clearInterval(this.intervalHandle);\n\n  }\n\n      this.secondsRemaining--\n\n  }\n\n\n  DecreasedOn(){\n\n\n    if(!this.state.running){\n      this.setState({\n        running: true,\n        currentTime: this.state.minutes,\n        text: \"Reset\"\n      })\n\n          this.intervalHandle = setInterval(this.tick, 1000);\n\n          let time = this.state.minutes;\n\n          this.secondsRemaining = time * 60;\n\n          if (this.state.minutes < 10){\n\n            this.setState({\n              minutes : \"0\" + this.state.minutes,\n            })\n          }\n    }\n\n    else{\n      clearInterval(this.intervalHandle);\n        this.setState({\n          running: false,\n          minutes: this.state.currentTime,\n          seconds: 0 + \"0\",\n          text: \"Restart\"\n\n       })\n\n      }\n\n      const min = this.state.minutes;\n      const sec = this.secondsRemaining;\n      if (min == 0 & sec == 0) {\n        return(\n          <Sound />\n        );\n      }\n\n\n\n\n}\n\n  render() {\n    return (\n       <div className=\"Timer\" class=\"timer\">\n\n          <div class=\"clock\">\n          <p> {this.state.minutes} : {this.state.seconds}</p>\n\n          <div class = \"buttons\">\n          <ButtonPlus\n              onClick ={()=>this.AddMinutes()}\n           />\n\n           <StartButton\n                onClick={()=>this.DecreasedOn()}\n                content={this.state.text}\n            />\n\n          <ButtonMinus\n            onClick ={()=>this.DeleteMinutes()} />\n            </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}